#include "visual_novel_main_scene_module.h"

void VisualNovelMainSceneModule::generate_script(Ref<FileAccess> p_file) {
	p_file->store_line("# Main.gd");
	p_file->store_line("# Generated by Lupine Engine - Visual Novel Main Scene");
	p_file->store_line("# Main controller for the visual novel game");
	p_file->store_line("");
	p_file->store_line("extends Control");
	p_file->store_line("");
	p_file->store_line("# UI references");
	p_file->store_line("@onready var background_display = $BackgroundLayer/BackgroundDisplay");
	p_file->store_line("@onready var portrait_display = $PortraitLayer/PortraitDisplay");
	p_file->store_line("@onready var dialogue_ui = $UILayer/DialogueUI");
	p_file->store_line("@onready var choice_menu = $UILayer/ChoiceMenu");
	p_file->store_line("@onready var save_load_menu = $UILayer/SaveLoadMenu");
	p_file->store_line("@onready var main_menu = $UILayer/MainMenu");
	p_file->store_line("");
	p_file->store_line("# Game state");
	p_file->store_line("var is_in_dialogue = false");
	p_file->store_line("var current_script_file = \"\"");
	p_file->store_line("");
	p_file->store_line("func _ready():");
	p_file->store_line("\t# Initialize all systems");
	p_file->store_line("\tsetup_ui_connections()");
	p_file->store_line("\tsetup_input_handling()");
	p_file->store_line("\t");
	p_file->store_line("\t# Start with main menu");
	p_file->store_line("\tshow_main_menu()");
	p_file->store_line("\t");
	p_file->store_line("\tprint(\"Visual Novel Main Scene initialized\")");
	p_file->store_line("");
	p_file->store_line("func setup_ui_connections():");
	p_file->store_line("\t# Connect VN Script Parser signals");
	p_file->store_line("\tif VNScriptParser:");
	p_file->store_line("\t\tVNScriptParser.dialogue_started.connect(_on_dialogue_started)");
	p_file->store_line("\t\tVNScriptParser.dialogue_ended.connect(_on_dialogue_ended)");
	p_file->store_line("\t\tVNScriptParser.script_finished.connect(_on_script_finished)");
	p_file->store_line("\t");
	p_file->store_line("\t# Connect Choice System signals");
	p_file->store_line("\tif ChoiceSystem:");
	p_file->store_line("\t\tChoiceSystem.choices_presented.connect(_on_choices_presented)");
	p_file->store_line("\t\tChoiceSystem.choices_hidden.connect(_on_choices_hidden)");
	p_file->store_line("\t");
	p_file->store_line("\t# Connect Save/Load System signals");
	p_file->store_line("\tif SaveLoadSystem:");
	p_file->store_line("\t\tSaveLoadSystem.game_saved.connect(_on_game_saved)");
	p_file->store_line("\t\tSaveLoadSystem.game_loaded.connect(_on_game_loaded)");
	p_file->store_line("");
	p_file->store_line("func setup_input_handling():");
	p_file->store_line("\t# Set up input handling for the main scene");
	p_file->store_line("\tset_process_input(true)");
	p_file->store_line("");
	p_file->store_line("func _input(event):");
	p_file->store_line("\tif event is InputEventKey and event.pressed:");
	p_file->store_line("\t\tmatch event.keycode:");
	p_file->store_line("\t\t\tKEY_SPACE, KEY_ENTER:");
	p_file->store_line("\t\t\t\tif is_in_dialogue:");
	p_file->store_line("\t\t\t\t\tcontinue_dialogue()");
	p_file->store_line("\t\t\t\t\tget_viewport().set_input_as_handled()");
	p_file->store_line("\t\t\tKEY_ESCAPE:");
	p_file->store_line("\t\t\t\ttoggle_main_menu()");
	p_file->store_line("\t\t\t\tget_viewport().set_input_as_handled()");
	p_file->store_line("\t\t\tKEY_S:");
	p_file->store_line("\t\t\t\tif event.ctrl_pressed:");
	p_file->store_line("\t\t\t\t\tquick_save()");
	p_file->store_line("\t\t\t\t\tget_viewport().set_input_as_handled()");
	p_file->store_line("\t\t\tKEY_L:");
	p_file->store_line("\t\t\t\tif event.ctrl_pressed:");
	p_file->store_line("\t\t\t\t\tquick_load()");
	p_file->store_line("\t\t\t\t\tget_viewport().set_input_as_handled()");
	p_file->store_line("\t\t\tKEY_F5:");
	p_file->store_line("\t\t\t\tshow_save_load_menu()");
	p_file->store_line("\t\t\t\tget_viewport().set_input_as_handled()");
	p_file->store_line("");
	p_file->store_line("# Main menu functions");
	p_file->store_line("func show_main_menu():");
	p_file->store_line("\tmain_menu.visible = true");
	p_file->store_line("\tdialogue_ui.visible = false");
	p_file->store_line("\tchoice_menu.visible = false");
	p_file->store_line("\tsave_load_menu.visible = false");
	p_file->store_line("");
	p_file->store_line("func hide_main_menu():");
	p_file->store_line("\tmain_menu.visible = false");
	p_file->store_line("");
	p_file->store_line("func toggle_main_menu():");
	p_file->store_line("\tif main_menu.visible:");
	p_file->store_line("\t\thide_main_menu()");
	p_file->store_line("\telse:");
	p_file->store_line("\t\tshow_main_menu()");
	p_file->store_line("");
	p_file->store_line("# Game control functions");
	p_file->store_line("func start_new_game():");
	p_file->store_line("\thide_main_menu()");
	p_file->store_line("\tload_script(\"data/dialogue/example_conversation.vn\")");
	p_file->store_line("");
	p_file->store_line("func load_script(script_path: String):");
	p_file->store_line("\tif VNScriptParser:");
	p_file->store_line("\t\tif VNScriptParser.load_script(script_path):");
	p_file->store_line("\t\t\tcurrent_script_file = script_path");
	p_file->store_line("\t\t\tVNScriptParser.start_script()");
	p_file->store_line("\t\t\tdialogue_ui.visible = true");
	p_file->store_line("\t\telse:");
	p_file->store_line("\t\t\tprint(\"Failed to load script: \", script_path)");
	p_file->store_line("");
	p_file->store_line("func continue_dialogue():");
	p_file->store_line("\tif VNScriptParser:");
	p_file->store_line("\t\tVNScriptParser.continue_script()");
	p_file->store_line("");
	p_file->store_line("# Save/Load functions");
	p_file->store_line("func quick_save():");
	p_file->store_line("\tif SaveLoadSystem:");
	p_file->store_line("\t\tSaveLoadSystem.quick_save()");
	p_file->store_line("");
	p_file->store_line("func quick_load():");
	p_file->store_line("\tif SaveLoadSystem:");
	p_file->store_line("\t\tSaveLoadSystem.quick_load()");
	p_file->store_line("");
	p_file->store_line("func show_save_load_menu():");
	p_file->store_line("\tif save_load_menu.has_method(\"show_menu\"):");
	p_file->store_line("\t\tsave_load_menu.show_menu()");
	p_file->store_line("\telse:");
	p_file->store_line("\t\tsave_load_menu.visible = true");
	p_file->store_line("");
	p_file->store_line("# Signal handlers");
	p_file->store_line("func _on_dialogue_started(character: String, text: String):");
	p_file->store_line("\tis_in_dialogue = true");
	p_file->store_line("\tif dialogue_ui.has_method(\"show_dialogue\"):");
	p_file->store_line("\t\tdialogue_ui.show_dialogue(character, text)");
	p_file->store_line("");
	p_file->store_line("func _on_dialogue_ended():");
	p_file->store_line("\tis_in_dialogue = false");
	p_file->store_line("");
	p_file->store_line("func _on_script_finished():");
	p_file->store_line("\tis_in_dialogue = false");
	p_file->store_line("\tshow_main_menu()");
	p_file->store_line("");
	p_file->store_line("func _on_choices_presented(choices: Array):");
	p_file->store_line("\tis_in_dialogue = false");
	p_file->store_line("");
	p_file->store_line("func _on_choices_hidden():");
	p_file->store_line("\tpass  # Choices are handled by the choice system");
	p_file->store_line("");
	p_file->store_line("func _on_game_saved(slot: int, save_name: String):");
	p_file->store_line("\tprint(\"Game saved: \", save_name)");
	p_file->store_line("");
	p_file->store_line("func _on_game_loaded(slot: int, save_name: String):");
	p_file->store_line("\tprint(\"Game loaded: \", save_name)");
	p_file->store_line("\thide_main_menu()");
	p_file->store_line("\tdialogue_ui.visible = true");
}

void VisualNovelMainSceneModule::generate_file(Ref<FileAccess> p_file, const String &p_relative_path) {
	String filename = p_relative_path.get_file();

	if (filename == "DialogueUI.gd") {
		// Generate the dialogue UI script
		p_file->store_line("# DialogueUI.gd");
		p_file->store_line("# Generated by Lupine Engine - Dialogue UI Script");
		p_file->store_line("# Manages the dialogue display for visual novels");
		p_file->store_line("");
		p_file->store_line("extends Control");
		p_file->store_line("");
		p_file->store_line("# UI references");
		p_file->store_line("@onready var character_name_label = $DialoguePanel/VBoxContainer/CharacterName");
		p_file->store_line("@onready var dialogue_text_label = $DialoguePanel/VBoxContainer/DialogueText");
		p_file->store_line("@onready var continue_indicator = $DialoguePanel/ContinueIndicator");
		p_file->store_line("");
		p_file->store_line("# Text display settings");
		p_file->store_line("var text_speed = 0.05  # Seconds per character");
		p_file->store_line("var is_displaying_text = false");
		p_file->store_line("var current_text = \"\"");
		p_file->store_line("var text_tween: Tween");
		p_file->store_line("");
		p_file->store_line("func _ready():");
		p_file->store_line("\t# Hide initially");
		p_file->store_line("\tvisible = false");
		p_file->store_line("\tprint(\"Dialogue UI initialized\")");
		p_file->store_line("");
		p_file->store_line("func show_dialogue(character: String, text: String):");
		p_file->store_line("\t# Set character name");
		p_file->store_line("\tcharacter_name_label.text = character");
		p_file->store_line("\t");
		p_file->store_line("\t# Display text with typewriter effect");
		p_file->store_line("\tcurrent_text = text");
		p_file->store_line("\tdisplay_text_gradually(text)");
		p_file->store_line("\t");
		p_file->store_line("\t# Show the dialogue panel");
		p_file->store_line("\tvisible = true");
		p_file->store_line("");
		p_file->store_line("func display_text_gradually(text: String):");
		p_file->store_line("\tis_displaying_text = true");
		p_file->store_line("\tcontinue_indicator.visible = false");
		p_file->store_line("\t");
		p_file->store_line("\t# Clear current text");
		p_file->store_line("\tdialogue_text_label.text = \"\"");
		p_file->store_line("\t");
		p_file->store_line("\t# Create tween for typewriter effect");
		p_file->store_line("\tif text_tween:");
		p_file->store_line("\t\ttext_tween.kill()");
		p_file->store_line("\t");
		p_file->store_line("\ttext_tween = create_tween()");
		p_file->store_line("\t");
		p_file->store_line("\t# Animate text appearance");
		p_file->store_line("\tfor i in range(text.length() + 1):");
		p_file->store_line("\t\tvar partial_text = text.substr(0, i)");
		p_file->store_line("\t\ttext_tween.tween_callback(func(): dialogue_text_label.text = partial_text)");
		p_file->store_line("\t\ttext_tween.tween_delay(text_speed)");
		p_file->store_line("\t");
		p_file->store_line("\t# Show continue indicator when done");
		p_file->store_line("\ttext_tween.tween_callback(func():");
		p_file->store_line("\t\tis_displaying_text = false");
		p_file->store_line("\t\tcontinue_indicator.visible = true");
		p_file->store_line("\t)");
		p_file->store_line("");
		p_file->store_line("func skip_text_animation():");
		p_file->store_line("\tif is_displaying_text:");
		p_file->store_line("\t\tif text_tween:");
		p_file->store_line("\t\t\ttext_tween.kill()");
		p_file->store_line("\t\tdialogue_text_label.text = current_text");
		p_file->store_line("\t\tis_displaying_text = false");
		p_file->store_line("\t\tcontinue_indicator.visible = true");
		p_file->store_line("");
		p_file->store_line("func hide_dialogue():");
		p_file->store_line("\tvisible = false");
		p_file->store_line("");
		p_file->store_line("func _input(event):");
		p_file->store_line("\tif visible and event is InputEventMouseButton:");
		p_file->store_line("\t\tif event.pressed and event.button_index == MOUSE_BUTTON_LEFT:");
		p_file->store_line("\t\t\tif is_displaying_text:");
		p_file->store_line("\t\t\t\tskip_text_animation()");
		p_file->store_line("\t\t\t\tget_viewport().set_input_as_handled()");
	} else if (filename == "README_VisualNovel.md") {
		// Generate the README file
		generate_readme(p_file);
	} else {
		// Use default file generation
		LupineModuleBase::generate_file(p_file, p_relative_path);
	}
}

void VisualNovelMainSceneModule::generate_scene(Ref<FileAccess> p_file, const String &p_scene_name) {
	if (p_scene_name == "Main") {
		// Generate the main scene
		p_file->store_line("[gd_scene load_steps=7 format=3 uid=\"uid://main_scene\"]");
		p_file->store_line("");
		p_file->store_line("[ext_resource type=\"Script\" path=\"res://scripts/Main.gd\" id=\"1_main_script\"]");
		p_file->store_line("[ext_resource type=\"PackedScene\" path=\"res://scenes/ui/BackgroundDisplay.tscn\" id=\"2_background\"]");
		p_file->store_line("[ext_resource type=\"PackedScene\" path=\"res://scenes/ui/PortraitDisplay.tscn\" id=\"3_portrait\"]");
		p_file->store_line("[ext_resource type=\"PackedScene\" path=\"res://scenes/ui/DialogueUI.tscn\" id=\"4_dialogue\"]");
		p_file->store_line("[ext_resource type=\"PackedScene\" path=\"res://scenes/ui/ChoiceMenu.tscn\" id=\"5_choice\"]");
		p_file->store_line("[ext_resource type=\"PackedScene\" path=\"res://scenes/ui/SaveLoadMenu.tscn\" id=\"6_saveload\"]");
		p_file->store_line("");
		p_file->store_line("[node name=\"Main\" type=\"Control\"]");
		p_file->store_line("layout_mode = 3");
		p_file->store_line("anchors_preset = 15");
		p_file->store_line("anchor_right = 1.0");
		p_file->store_line("anchor_bottom = 1.0");
		p_file->store_line("script = ExtResource(\"1_main_script\")");
		p_file->store_line("");
		p_file->store_line("[node name=\"BackgroundLayer\" type=\"CanvasLayer\" parent=\".\"]");
		p_file->store_line("layer = -2");
		p_file->store_line("");
		p_file->store_line("[node name=\"BackgroundDisplay\" parent=\"BackgroundLayer\" instance=ExtResource(\"2_background\")]");
		p_file->store_line("");
		p_file->store_line("[node name=\"PortraitLayer\" type=\"CanvasLayer\" parent=\".\"]");
		p_file->store_line("layer = -1");
		p_file->store_line("");
		p_file->store_line("[node name=\"PortraitDisplay\" parent=\"PortraitLayer\" instance=ExtResource(\"3_portrait\")]");
		p_file->store_line("");
		p_file->store_line("[node name=\"UILayer\" type=\"CanvasLayer\" parent=\".\"]");
		p_file->store_line("");
		p_file->store_line("[node name=\"DialogueUI\" parent=\"UILayer\" instance=ExtResource(\"4_dialogue\")]");
		p_file->store_line("");
		p_file->store_line("[node name=\"ChoiceMenu\" parent=\"UILayer\" instance=ExtResource(\"5_choice\")]");
		p_file->store_line("");
		p_file->store_line("[node name=\"SaveLoadMenu\" parent=\"UILayer\" instance=ExtResource(\"6_saveload\")]");
		p_file->store_line("");
		p_file->store_line("[node name=\"MainMenu\" type=\"Control\" parent=\"UILayer\"]");
		p_file->store_line("layout_mode = 3");
		p_file->store_line("anchors_preset = 15");
		p_file->store_line("anchor_right = 1.0");
		p_file->store_line("anchor_bottom = 1.0");
		p_file->store_line("");
		p_file->store_line("[node name=\"Background\" type=\"ColorRect\" parent=\"UILayer/MainMenu\"]");
		p_file->store_line("layout_mode = 1");
		p_file->store_line("anchors_preset = 15");
		p_file->store_line("anchor_right = 1.0");
		p_file->store_line("anchor_bottom = 1.0");
		p_file->store_line("color = Color(0, 0, 0, 0.8)");
		p_file->store_line("");
		p_file->store_line("[node name=\"MenuPanel\" type=\"Panel\" parent=\"UILayer/MainMenu\"]");
		p_file->store_line("layout_mode = 1");
		p_file->store_line("anchors_preset = 8");
		p_file->store_line("anchor_left = 0.5");
		p_file->store_line("anchor_top = 0.5");
		p_file->store_line("anchor_right = 0.5");
		p_file->store_line("anchor_bottom = 0.5");
		p_file->store_line("offset_left = -150.0");
		p_file->store_line("offset_top = -100.0");
		p_file->store_line("offset_right = 150.0");
		p_file->store_line("offset_bottom = 100.0");
		p_file->store_line("");
		p_file->store_line("[node name=\"VBoxContainer\" type=\"VBoxContainer\" parent=\"UILayer/MainMenu/MenuPanel\"]");
		p_file->store_line("layout_mode = 1");
		p_file->store_line("anchors_preset = 15");
		p_file->store_line("anchor_right = 1.0");
		p_file->store_line("anchor_bottom = 1.0");
		p_file->store_line("offset_left = 10.0");
		p_file->store_line("offset_top = 10.0");
		p_file->store_line("offset_right = -10.0");
		p_file->store_line("offset_bottom = -10.0");
		p_file->store_line("");
		p_file->store_line("[node name=\"Title\" type=\"Label\" parent=\"UILayer/MainMenu/MenuPanel/VBoxContainer\"]");
		p_file->store_line("layout_mode = 2");
		p_file->store_line("text = \"Visual Novel\"");
		p_file->store_line("horizontal_alignment = 1");
		p_file->store_line("");
		p_file->store_line("[node name=\"NewGame\" type=\"Button\" parent=\"UILayer/MainMenu/MenuPanel/VBoxContainer\"]");
		p_file->store_line("layout_mode = 2");
		p_file->store_line("text = \"New Game\"");
		p_file->store_line("");
		p_file->store_line("[node name=\"LoadGame\" type=\"Button\" parent=\"UILayer/MainMenu/MenuPanel/VBoxContainer\"]");
		p_file->store_line("layout_mode = 2");
		p_file->store_line("text = \"Load Game\"");
		p_file->store_line("");
		p_file->store_line("[node name=\"Settings\" type=\"Button\" parent=\"UILayer/MainMenu/MenuPanel/VBoxContainer\"]");
		p_file->store_line("layout_mode = 2");
		p_file->store_line("text = \"Settings\"");
		p_file->store_line("");
		p_file->store_line("[node name=\"Quit\" type=\"Button\" parent=\"UILayer/MainMenu/MenuPanel/VBoxContainer\"]");
		p_file->store_line("layout_mode = 2");
		p_file->store_line("text = \"Quit\"");
	} else if (p_scene_name == "DialogueUI") {
		// Generate the dialogue UI scene
		p_file->store_line("[gd_scene load_steps=2 format=3 uid=\"uid://dialogue_ui\"]");
		p_file->store_line("");
		p_file->store_line("[ext_resource type=\"Script\" path=\"res://scripts/ui/DialogueUI.gd\" id=\"1_dialogue_script\"]");
		p_file->store_line("");
		p_file->store_line("[node name=\"DialogueUI\" type=\"Control\"]");
		p_file->store_line("layout_mode = 3");
		p_file->store_line("anchors_preset = 15");
		p_file->store_line("anchor_right = 1.0");
		p_file->store_line("anchor_bottom = 1.0");
		p_file->store_line("script = ExtResource(\"1_dialogue_script\")");
		p_file->store_line("");
		p_file->store_line("[node name=\"DialoguePanel\" type=\"Panel\" parent=\".\"]");
		p_file->store_line("layout_mode = 1");
		p_file->store_line("anchors_preset = 12");
		p_file->store_line("anchor_top = 1.0");
		p_file->store_line("anchor_right = 1.0");
		p_file->store_line("anchor_bottom = 1.0");
		p_file->store_line("offset_left = 20.0");
		p_file->store_line("offset_top = -150.0");
		p_file->store_line("offset_right = -20.0");
		p_file->store_line("offset_bottom = -20.0");
		p_file->store_line("");
		p_file->store_line("[node name=\"VBoxContainer\" type=\"VBoxContainer\" parent=\"DialoguePanel\"]");
		p_file->store_line("layout_mode = 1");
		p_file->store_line("anchors_preset = 15");
		p_file->store_line("anchor_right = 1.0");
		p_file->store_line("anchor_bottom = 1.0");
		p_file->store_line("offset_left = 10.0");
		p_file->store_line("offset_top = 10.0");
		p_file->store_line("offset_right = -10.0");
		p_file->store_line("offset_bottom = -10.0");
		p_file->store_line("");
		p_file->store_line("[node name=\"CharacterName\" type=\"Label\" parent=\"DialoguePanel/VBoxContainer\"]");
		p_file->store_line("layout_mode = 2");
		p_file->store_line("text = \"Character Name\"");
		p_file->store_line("");
		p_file->store_line("[node name=\"DialogueText\" type=\"RichTextLabel\" parent=\"DialoguePanel/VBoxContainer\"]");
		p_file->store_line("layout_mode = 2");
		p_file->store_line("size_flags_vertical = 3");
		p_file->store_line("text = \"Dialogue text goes here...\"");
		p_file->store_line("fit_content = true");
		p_file->store_line("");
		p_file->store_line("[node name=\"ContinueIndicator\" type=\"Label\" parent=\"DialoguePanel\"]");
		p_file->store_line("layout_mode = 1");
		p_file->store_line("anchors_preset = 3");
		p_file->store_line("anchor_left = 1.0");
		p_file->store_line("anchor_top = 1.0");
		p_file->store_line("anchor_right = 1.0");
		p_file->store_line("anchor_bottom = 1.0");
		p_file->store_line("offset_left = -30.0");
		p_file->store_line("offset_top = -25.0");
		p_file->store_line("offset_right = -10.0");
		p_file->store_line("offset_bottom = -5.0");
		p_file->store_line("text = \"▼\"");
		p_file->store_line("horizontal_alignment = 2");
	}
}

void VisualNovelMainSceneModule::generate_readme(Ref<FileAccess> p_file) {
	p_file->store_line("# Visual Novel Template - Lupine Engine");
	p_file->store_line("");
	p_file->store_line("## Overview");
	p_file->store_line("");
	p_file->store_line("The Lupine Engine Visual Novel Template provides a complete, writer-forward framework for creating visual novels with rich storytelling features. This template includes a custom script format designed to be intuitive for writers while providing powerful branching narrative capabilities.");
	p_file->store_line("");
	p_file->store_line("## Features");
	p_file->store_line("");
	p_file->store_line("- **Writer-Forward Script Format**: Easy-to-learn syntax for dialogue, choices, and scene control");
	p_file->store_line("- **Character Portrait System**: Dynamic character display with emotion support");
	p_file->store_line("- **Background Management**: Scene backgrounds with transition effects");
	p_file->store_line("- **Audio System**: Music and sound effects with crossfading");
	p_file->store_line("- **Save/Load System**: Multiple save slots with auto-save functionality");
	p_file->store_line("- **Choice System**: Branching narratives with conditional choices");
	p_file->store_line("- **Asset Discovery**: Automatic detection of portraits, backgrounds, and audio files");
	p_file->store_line("");
	p_file->store_line("## Script Format Guide");
	p_file->store_line("");
	p_file->store_line("### Basic Structure");
	p_file->store_line("");
	p_file->store_line("Visual novel scripts use a node-based format where each dialogue segment is a numbered node:");
	p_file->store_line("");
	p_file->store_line("```");
	p_file->store_line("NodeID");
	p_file->store_line("Speaker");
	p_file->store_line("Dialogue text");
	p_file->store_line("[Next Node or Choice]");
	p_file->store_line("```");
	p_file->store_line("");
	p_file->store_line("### Example Script");
	p_file->store_line("");
	p_file->store_line("```");
	p_file->store_line("FN : Conversation");
	p_file->store_line("");
	p_file->store_line("[[background school_courtyard]]");
	p_file->store_line("[[setLeft Char1_neutral]]");
	p_file->store_line("[[setRight Char2_neutral]]");
	p_file->store_line("");
	p_file->store_line("1_1");
	p_file->store_line("Char2");
	p_file->store_line("Hey Char1! How are you doing?");
	p_file->store_line("[Good!|2_1]");
	p_file->store_line("[Bad!|2_2]");
	p_file->store_line("");
	p_file->store_line("2_1");
	p_file->store_line("Char2_happy");
	p_file->store_line("That's great!");
	p_file->store_line("[[var mood = good]]");
	p_file->store_line("[3_1]");
	p_file->store_line("");
	p_file->store_line("2_2");
	p_file->store_line("Char2_sad");
	p_file->store_line("Oh, I'm sorry");
	p_file->store_line("[[var mood = bad]]");
	p_file->store_line("[3_1]");
	p_file->store_line("");
	p_file->store_line("3_1 if mood = good");
	p_file->store_line("Char2_happy");
	p_file->store_line("I'm doing good as well!");
	p_file->store_line("[end]");
	p_file->store_line("");
	p_file->store_line("3_1 if mood = bad");
	p_file->store_line("Char2_sad");
	p_file->store_line("At least I'm doing better...");
	p_file->store_line("[end]");
	p_file->store_line("```");
	p_file->store_line("");
	p_file->store_line("### Commands");
	p_file->store_line("");
	p_file->store_line("Commands are enclosed in double brackets `[[command]]`:");
	p_file->store_line("");
	p_file->store_line("- `[[background name]]` - Set scene background");
	p_file->store_line("- `[[setLeft/Center/Right character_emotion]]` - Position character portraits");
	p_file->store_line("- `[[playMusic track]]` - Play background music with looping");
	p_file->store_line("- `[[stopMusic]]` - Stop current music (optional: `force` for immediate stop)");
	p_file->store_line("- `[[crossMusic track]]` - Crossfade to new music");
	p_file->store_line("- `[[playSound effect]]` - Play sound effect");
	p_file->store_line("- `[[showKeyImage image]]` - Display key artwork/CG");
	p_file->store_line("- `[[clearKeyImage]]` - Hide key artwork");
	p_file->store_line("- `[[transitionEffect effect]]` - Play screen transition effect");
	p_file->store_line("- `[[characterEffect effect,position]]` - Play character animation");
	p_file->store_line("- `[[var name = value]]` - Set story variable");
	p_file->store_line("- `[[signal name]]` - Emit custom signal for game logic");
	p_file->store_line("");
	p_file->store_line("### Character Names");
	p_file->store_line("");
	p_file->store_line("Character names are automatically formatted:");
	p_file->store_line("- `DamienWayne` becomes \"Damien Wayne\"");
	p_file->store_line("- `DamienWayne_happy` uses the happy portrait and displays \"Damien Wayne\"");
	p_file->store_line("");
	p_file->store_line("### Choices and Branching");
	p_file->store_line("");
	p_file->store_line("Choices use the format `[Choice Text|Target Node]`:");
	p_file->store_line("");
	p_file->store_line("```");
	p_file->store_line("1_1");
	p_file->store_line("Character");
	p_file->store_line("What would you like to do?");
	p_file->store_line("[Go left|left_path]");
	p_file->store_line("[Go right|right_path]");
	p_file->store_line("[Stay here|stay_here]");
	p_file->store_line("```");
	p_file->store_line("");
	p_file->store_line("### Conditional Nodes");
	p_file->store_line("");
	p_file->store_line("Nodes can have conditions based on story variables:");
	p_file->store_line("");
	p_file->store_line("```");
	p_file->store_line("3_1 if mood = good");
	p_file->store_line("Character_happy");
	p_file->store_line("Everything is wonderful!");
	p_file->store_line("[end]");
	p_file->store_line("");
	p_file->store_line("3_1 if mood = bad");
	p_file->store_line("Character_sad");
	p_file->store_line("Things could be better...");
	p_file->store_line("[end]");
	p_file->store_line("```");
	p_file->store_line("");
	p_file->store_line("Supported operators: `=`, `>`, `<`, `>=`, `<=`, `and`, `or`");
	p_file->store_line("");
	p_file->store_line("### Functions");
	p_file->store_line("");
	p_file->store_line("Group related scenes using functions:");
	p_file->store_line("");
	p_file->store_line("```");
	p_file->store_line("FN : SchoolScene");
	p_file->store_line("");
	p_file->store_line("# Nodes for school scene here...");
	p_file->store_line("");
	p_file->store_line("FN : HomeScene");
	p_file->store_line("");
	p_file->store_line("# Nodes for home scene here...");
	p_file->store_line("```");
	p_file->store_line("");
	p_file->store_line("## Asset Organization");
	p_file->store_line("");
	p_file->store_line("### Folder Structure");
	p_file->store_line("");
	p_file->store_line("```");
	p_file->store_line("assets/");
	p_file->store_line("├── backgrounds/        # Scene backgrounds (.png, .jpg, .webp)");
	p_file->store_line("├── portraits/         # Character portraits (.png, .jpg, .webp)");
	p_file->store_line("│   ├── character1_neutral.png");
	p_file->store_line("│   ├── character1_happy.png");
	p_file->store_line("│   └── character1_sad.png");
	p_file->store_line("├── music/            # Background music (.mp3, .wav, .ogg)");
	p_file->store_line("└── soundEffects/     # Sound effects (.wav, .mp3, .ogg)");
	p_file->store_line("```");
	p_file->store_line("");
	p_file->store_line("### Asset Discovery");
	p_file->store_line("");
	p_file->store_line("The engine automatically finds assets by name:");
	p_file->store_line("- `[[background farmhouse]]` finds `assets/backgrounds/farmhouse.png`");
	p_file->store_line("- `[[playMusic peaceful]]` finds `assets/music/peaceful.mp3`");
	p_file->store_line("- Character portraits use fallback: `Char1_happy` → `Char1_neutral` → `Char1`");
	p_file->store_line("");
	p_file->store_line("## Controls");
	p_file->store_line("");
	p_file->store_line("### Player Controls");
	p_file->store_line("- **Space/Enter**: Continue dialogue");
	p_file->store_line("- **Mouse Click**: Continue dialogue or skip text animation");
	p_file->store_line("- **Number Keys (1-9)**: Quick choice selection");
	p_file->store_line("- **Escape**: Toggle main menu");
	p_file->store_line("- **Ctrl+S**: Quick save");
	p_file->store_line("- **Ctrl+L**: Quick load");
	p_file->store_line("- **F5**: Open save/load menu");
	p_file->store_line("");
	p_file->store_line("### Menu Navigation");
	p_file->store_line("- **New Game**: Start from the beginning");
	p_file->store_line("- **Load Game**: Access save slots");
	p_file->store_line("- **Settings**: Game configuration (if implemented)");
	p_file->store_line("- **Quit**: Exit game");
	p_file->store_line("");
	p_file->store_line("## Getting Started");
	p_file->store_line("");
	p_file->store_line("1. **Create Your Script**: Add `.vn` files to `data/dialogue/`");
	p_file->store_line("2. **Add Assets**: Place images and audio in appropriate `assets/` folders");
	p_file->store_line("3. **Test Your Story**: Run the game and use the main menu to start");
	p_file->store_line("4. **Iterate**: Use the save/load system to test different story branches");
	p_file->store_line("");
	p_file->store_line("## Tips for Writers");
	p_file->store_line("");
	p_file->store_line("1. **Plan Your Structure**: Sketch your story flow before writing");
	p_file->store_line("2. **Use Meaningful Node IDs**: `chapter1_intro` is better than `1_1`");
	p_file->store_line("3. **Test Frequently**: Use the save/load system to test different paths");
	p_file->store_line("4. **Organize Assets**: Keep consistent naming for easy asset discovery");
	p_file->store_line("5. **Use Variables**: Track important story state for complex narratives");
	p_file->store_line("");
	p_file->store_line("For more advanced customization, see the generated script files in your project's `globals/` and `scripts/` directories.");
}
