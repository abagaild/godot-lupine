#include "passive_mobs_module.h"

void PassiveMobsModule::generate_script(Ref<FileAccess> p_file) {
	String filename = p_file->get_path().get_file();
	
	if (filename == "PassiveMob.gd") {
		p_file->store_line("# PassiveMob.gd");
		p_file->store_line("# Generated by Lupine Engine - Passive Mob Base Class");
		p_file->store_line("# Base class for friendly, non-hostile creatures");
		p_file->store_line("");
		p_file->store_line("extends CharacterBody2D");
		p_file->store_line("class_name PassiveMob");
		p_file->store_line("");
		p_file->store_line("# Mob properties");
		p_file->store_line("@export var mob_name: String = \"Friendly Creature\"");
		p_file->store_line("@export var bark_messages: Array[String] = [\"Hello!\", \"Nice day!\", \"*happy sounds*\"]");
		p_file->store_line("@export var interaction_messages: Array[String] = [\"*purrs*\", \"*content*\", \"*happy*\"]");
		p_file->store_line("@export var detection_range: float = 80.0");
		p_file->store_line("@export var interaction_range: float = 50.0");
		p_file->store_line("@export var bark_cooldown: float = 3.0");
		p_file->store_line("@export var move_speed: float = 30.0");
		p_file->store_line("@export var wander_range: float = 100.0");
		p_file->store_line("");
		p_file->store_line("# State");
		p_file->store_line("var player_nearby: bool = false");
		p_file->store_line("var can_bark: bool = true");
		p_file->store_line("var bark_timer: float = 0.0");
		p_file->store_line("var initial_position: Vector2");
		p_file->store_line("var wander_target: Vector2");
		p_file->store_line("var wander_timer: float = 0.0");
		p_file->store_line("var idle_time: float = 0.0");
		p_file->store_line("");
		p_file->store_line("# Components");
		p_file->store_line("@onready var sprite: Sprite2D = $Sprite2D");
		p_file->store_line("@onready var detection_area: Area2D = $DetectionArea");
		p_file->store_line("@onready var interaction_area: Area2D = $InteractionArea");
		p_file->store_line("@onready var interaction_prompt: Label = $InteractionPrompt");
		p_file->store_line("");
		p_file->store_line("# Effect scenes");
		p_file->store_line("var bark_bubble_scene: PackedScene");
		p_file->store_line("var heart_effect_scene: PackedScene");
		p_file->store_line("");
		p_file->store_line("func _ready():");
		p_file->store_line("\tinitial_position = global_position");
		p_file->store_line("\twander_target = global_position");
		p_file->store_line("\t");
		p_file->store_line("\t# Load effect scenes");
		p_file->store_line("\tbark_bubble_scene = preload(\"res://scenes/effects/BarkBubble.tscn\")");
		p_file->store_line("\theart_effect_scene = preload(\"res://scenes/effects/HeartEffect.tscn\")");
		p_file->store_line("\t");
		p_file->store_line("\t# Setup areas");
		p_file->store_line("\tif detection_area:");
		p_file->store_line("\t\tdetection_area.body_entered.connect(_on_player_detected)");
		p_file->store_line("\t\tdetection_area.body_exited.connect(_on_player_left)");
		p_file->store_line("\t\t_setup_detection_area()");
		p_file->store_line("\t");
		p_file->store_line("\tif interaction_area:");
		p_file->store_line("\t\tinteraction_area.body_entered.connect(_on_interaction_range_entered)");
		p_file->store_line("\t\tinteraction_area.body_exited.connect(_on_interaction_range_exited)");
		p_file->store_line("\t\t_setup_interaction_area()");
		p_file->store_line("\t");
		p_file->store_line("\tif interaction_prompt:");
		p_file->store_line("\t\tinteraction_prompt.visible = false");
		p_file->store_line("");
		p_file->store_line("func _physics_process(delta):");
		p_file->store_line("\t_update_timers(delta)");
		p_file->store_line("\t_handle_movement(delta)");
		p_file->store_line("\tmove_and_slide()");
		p_file->store_line("");
		p_file->store_line("func _input(event):");
		p_file->store_line("\tif event.is_action_pressed(\"interact\") and _can_interact():");
		p_file->store_line("\t\t_interact()");
		p_file->store_line("");
		p_file->store_line("func _update_timers(delta: float):");
		p_file->store_line("\tbark_timer -= delta");
		p_file->store_line("\tif bark_timer <= 0:");
		p_file->store_line("\t\tcan_bark = true");
		p_file->store_line("\t");
		p_file->store_line("\twander_timer -= delta");
		p_file->store_line("\tidle_time += delta");
		p_file->store_line("");
		p_file->store_line("func _handle_movement(delta: float):");
		p_file->store_line("\tif player_nearby:");
		p_file->store_line("\t\t# Face the player");
		p_file->store_line("\t\tvar player = get_tree().get_first_node_in_group(\"player\")");
		p_file->store_line("\t\tif player:");
		p_file->store_line("\t\t\tvar direction = (player.global_position - global_position).normalized()");
		p_file->store_line("\t\t\tsprite.flip_h = direction.x < 0");
		p_file->store_line("\t\t\tvelocity = Vector2.ZERO");
		p_file->store_line("\t\treturn");
		p_file->store_line("\t");
		p_file->store_line("\t# Wander behavior");
		p_file->store_line("\tif wander_timer <= 0:");
		p_file->store_line("\t\t_choose_new_wander_target()");
		p_file->store_line("\t\twander_timer = randf_range(2.0, 5.0)");
		p_file->store_line("\t");
		p_file->store_line("\t# Move towards wander target");
		p_file->store_line("\tvar distance_to_target = global_position.distance_to(wander_target)");
		p_file->store_line("\tif distance_to_target > 10.0:");
		p_file->store_line("\t\tvar direction = (wander_target - global_position).normalized()");
		p_file->store_line("\t\tvelocity = direction * move_speed");
		p_file->store_line("\t\tsprite.flip_h = direction.x < 0");
		p_file->store_line("\telse:");
		p_file->store_line("\t\tvelocity = Vector2.ZERO");
		p_file->store_line("");
		p_file->store_line("func _choose_new_wander_target():");
		p_file->store_line("\tvar angle = randf() * TAU");
		p_file->store_line("\tvar distance = randf() * wander_range");
		p_file->store_line("\twander_target = initial_position + Vector2(cos(angle), sin(angle)) * distance");
		p_file->store_line("");
		p_file->store_line("func _on_player_detected(body: Node):");
		p_file->store_line("\tif body.name.contains(\"Player\"):");
		p_file->store_line("\t\tplayer_nearby = true");
		p_file->store_line("\t\t_try_bark()");
		p_file->store_line("");
		p_file->store_line("func _on_player_left(body: Node):");
		p_file->store_line("\tif body.name.contains(\"Player\"):");
		p_file->store_line("\t\tplayer_nearby = false");
		p_file->store_line("");
		p_file->store_line("func _on_interaction_range_entered(body: Node):");
		p_file->store_line("\tif body.name.contains(\"Player\") and interaction_prompt:");
		p_file->store_line("\t\tinteraction_prompt.visible = true");
		p_file->store_line("");
		p_file->store_line("func _on_interaction_range_exited(body: Node):");
		p_file->store_line("\tif body.name.contains(\"Player\") and interaction_prompt:");
		p_file->store_line("\t\tinteraction_prompt.visible = false");
		p_file->store_line("");
		p_file->store_line("func _can_interact() -> bool:");
		p_file->store_line("\tif not interaction_area:");
		p_file->store_line("\t\treturn false");
		p_file->store_line("\t");
		p_file->store_line("\tvar bodies = interaction_area.get_overlapping_bodies()");
		p_file->store_line("\tfor body in bodies:");
		p_file->store_line("\t\tif body.name.contains(\"Player\"):");
		p_file->store_line("\t\t\treturn true");
		p_file->store_line("\treturn false");
		p_file->store_line("");
		p_file->store_line("func _interact():");
		p_file->store_line("\t# Show heart effect");
		p_file->store_line("\t_show_heart_effect()");
		p_file->store_line("\t");
		p_file->store_line("\t# Show interaction message");
		p_file->store_line("\tif interaction_messages.size() > 0:");
		p_file->store_line("\t\tvar message = interaction_messages[randi() % interaction_messages.size()]");
		p_file->store_line("\t\t_show_bark(message)");
		p_file->store_line("");
		p_file->store_line("func _try_bark():");
		p_file->store_line("\tif can_bark and bark_messages.size() > 0:");
		p_file->store_line("\t\tvar message = bark_messages[randi() % bark_messages.size()]");
		p_file->store_line("\t\t_show_bark(message)");
		p_file->store_line("\t\tcan_bark = false");
		p_file->store_line("\t\tbark_timer = bark_cooldown");
		p_file->store_line("");
		p_file->store_line("func _show_bark(message: String):");
		p_file->store_line("\tif bark_bubble_scene:");
		p_file->store_line("\t\tvar bubble = bark_bubble_scene.instantiate()");
		p_file->store_line("\t\tget_tree().current_scene.add_child(bubble)");
		p_file->store_line("\t\tbubble.global_position = global_position + Vector2(0, -40)");
		p_file->store_line("\t\tif bubble.has_method(\"show_message\"):");
		p_file->store_line("\t\t\tbubble.show_message(message)");
		p_file->store_line("");
		p_file->store_line("func _show_heart_effect():");
		p_file->store_line("\tif heart_effect_scene:");
		p_file->store_line("\t\tvar heart = heart_effect_scene.instantiate()");
		p_file->store_line("\t\tget_tree().current_scene.add_child(heart)");
		p_file->store_line("\t\theart.global_position = global_position + Vector2(0, -30)");
		p_file->store_line("");
		p_file->store_line("func _setup_detection_area():");
		p_file->store_line("\tvar detection_shape = detection_area.get_child(0) as CollisionShape2D");
		p_file->store_line("\tif detection_shape and detection_shape.shape is CircleShape2D:");
		p_file->store_line("\t\t(detection_shape.shape as CircleShape2D).radius = detection_range");
		p_file->store_line("");
		p_file->store_line("func _setup_interaction_area():");
		p_file->store_line("\tvar interaction_shape = interaction_area.get_child(0) as CollisionShape2D");
		p_file->store_line("\tif interaction_shape and interaction_shape.shape is CircleShape2D:");
		p_file->store_line("\t\t(interaction_shape.shape as CircleShape2D).radius = interaction_range");
	} else if (filename == "Cow.gd") {
		p_file->store_line("# Cow.gd");
		p_file->store_line("# Generated by Lupine Engine - Cow Passive Mob");
		p_file->store_line("# Friendly cow that moos and gives milk");
		p_file->store_line("");
		p_file->store_line("extends PassiveMob");
		p_file->store_line("");
		p_file->store_line("func _ready():");
		p_file->store_line("\tsuper._ready()");
		p_file->store_line("\t");
		p_file->store_line("\t# Cow-specific properties");
		p_file->store_line("\tmob_name = \"Cow\"");
		p_file->store_line("\tbark_messages = [\"Moo!\", \"*chews grass*\", \"Mooo~\", \"*looks at you curiously*\"]");
		p_file->store_line("\tinteraction_messages = [\"*happy moo*\", \"*nuzzles*\", \"Moooo!\", \"*content cow sounds*\"]");
		p_file->store_line("\tmove_speed = 20.0");
		p_file->store_line("\tbark_cooldown = 4.0");
		p_file->store_line("");
		p_file->store_line("func _interact():");
		p_file->store_line("\tsuper._interact()");
		p_file->store_line("\t");
		p_file->store_line("\t# Chance to give milk");
		p_file->store_line("\tif randf() < 0.3 and InventorySystem:");
		p_file->store_line("\t\tInventorySystem.add_item(\"milk\", 1)");
		p_file->store_line("\t\tif PopupManager:");
		p_file->store_line("\t\t\tPopupManager.show_item_pickup(\"Fresh Milk\", 1)");
	} else if (filename == "Cat.gd") {
		p_file->store_line("# Cat.gd");
		p_file->store_line("# Generated by Lupine Engine - Cat Passive Mob");
		p_file->store_line("# Friendly cat that purrs and brings gifts");
		p_file->store_line("");
		p_file->store_line("extends PassiveMob");
		p_file->store_line("");
		p_file->store_line("func _ready():");
		p_file->store_line("\tsuper._ready()");
		p_file->store_line("\t");
		p_file->store_line("\t# Cat-specific properties");
		p_file->store_line("\tmob_name = \"Cat\"");
		p_file->store_line("\tbark_messages = [\"Meow!\", \"*purrs*\", \"Mrow?\", \"*stretches*\", \"*yawns*\"]");
		p_file->store_line("\tinteraction_messages = [\"*purrs loudly*\", \"*rubs against you*\", \"Meow~\", \"*happy cat sounds*\"]");
		p_file->store_line("\tmove_speed = 40.0");
		p_file->store_line("\tbark_cooldown = 2.5");
		p_file->store_line("\twander_range = 150.0");
		p_file->store_line("");
		p_file->store_line("func _interact():");
		p_file->store_line("\tsuper._interact()");
		p_file->store_line("\t");
		p_file->store_line("\t# Rare chance to give a small gift");
		p_file->store_line("\tif randf() < 0.1 and InventorySystem:");
		p_file->store_line("\t\tvar gifts = [\"feather\", \"small_stone\", \"flower\"]");
		p_file->store_line("\t\tvar gift = gifts[randi() % gifts.size()]");
		p_file->store_line("\t\tInventorySystem.add_item(gift, 1)");
		p_file->store_line("\t\tif PopupManager:");
		p_file->store_line("\t\t\tPopupManager.show_item_pickup(\"Cat's Gift: \" + gift.capitalize(), 1)");
	}
}

void PassiveMobsModule::generate_scene(Ref<FileAccess> p_file, const String &p_scene_name) {
	if (p_scene_name == "Cow") {
		p_file->store_line("[gd_scene load_steps=4 format=3 uid=\"uid://cow_mob\"]");
		p_file->store_line("");
		p_file->store_line("[ext_resource type=\"Script\" path=\"res://scripts/mobs/Cow.gd\" id=\"1_cow_script\"]");
		p_file->store_line("");
		p_file->store_line("[sub_resource type=\"RectangleShape2D\" id=\"RectangleShape2D_1\"]");
		p_file->store_line("size = Vector2(40, 30)");
		p_file->store_line("");
		p_file->store_line("[sub_resource type=\"CircleShape2D\" id=\"CircleShape2D_1\"]");
		p_file->store_line("radius = 80.0");
		p_file->store_line("");
		p_file->store_line("[sub_resource type=\"CircleShape2D\" id=\"CircleShape2D_2\"]");
		p_file->store_line("radius = 50.0");
		p_file->store_line("");
		p_file->store_line("[node name=\"Cow\" type=\"CharacterBody2D\"]");
		p_file->store_line("script = ExtResource(\"1_cow_script\")");
		p_file->store_line("");
		p_file->store_line("[node name=\"Sprite2D\" type=\"Sprite2D\" parent=\".\"]");
		p_file->store_line("modulate = Color(0.9, 0.9, 0.9, 1)");
		p_file->store_line("scale = Vector2(40, 30)");
		p_file->store_line("");
		p_file->store_line("[node name=\"CollisionShape2D\" type=\"CollisionShape2D\" parent=\".\"]");
		p_file->store_line("shape = SubResource(\"RectangleShape2D_1\")");
		p_file->store_line("");
		p_file->store_line("[node name=\"DetectionArea\" type=\"Area2D\" parent=\".\"]");
		p_file->store_line("");
		p_file->store_line("[node name=\"DetectionShape\" type=\"CollisionShape2D\" parent=\"DetectionArea\"]");
		p_file->store_line("shape = SubResource(\"CircleShape2D_1\")");
		p_file->store_line("");
		p_file->store_line("[node name=\"InteractionArea\" type=\"Area2D\" parent=\".\"]");
		p_file->store_line("");
		p_file->store_line("[node name=\"InteractionShape\" type=\"CollisionShape2D\" parent=\"InteractionArea\"]");
		p_file->store_line("shape = SubResource(\"CircleShape2D_2\")");
		p_file->store_line("");
		p_file->store_line("[node name=\"InteractionPrompt\" type=\"Label\" parent=\".\"]");
		p_file->store_line("offset_left = -25.0");
		p_file->store_line("offset_top = -50.0");
		p_file->store_line("offset_right = 25.0");
		p_file->store_line("offset_bottom = -30.0");
		p_file->store_line("text = \"Press E\"");
		p_file->store_line("horizontal_alignment = 1");
	} else if (p_scene_name == "Cat") {
		p_file->store_line("[gd_scene load_steps=4 format=3 uid=\"uid://cat_mob\"]");
		p_file->store_line("");
		p_file->store_line("[ext_resource type=\"Script\" path=\"res://scripts/mobs/Cat.gd\" id=\"1_cat_script\"]");
		p_file->store_line("");
		p_file->store_line("[sub_resource type=\"RectangleShape2D\" id=\"RectangleShape2D_1\"]");
		p_file->store_line("size = Vector2(24, 16)");
		p_file->store_line("");
		p_file->store_line("[sub_resource type=\"CircleShape2D\" id=\"CircleShape2D_1\"]");
		p_file->store_line("radius = 80.0");
		p_file->store_line("");
		p_file->store_line("[sub_resource type=\"CircleShape2D\" id=\"CircleShape2D_2\"]");
		p_file->store_line("radius = 50.0");
		p_file->store_line("");
		p_file->store_line("[node name=\"Cat\" type=\"CharacterBody2D\"]");
		p_file->store_line("script = ExtResource(\"1_cat_script\")");
		p_file->store_line("");
		p_file->store_line("[node name=\"Sprite2D\" type=\"Sprite2D\" parent=\".\"]");
		p_file->store_line("modulate = Color(0.8, 0.6, 0.4, 1)");
		p_file->store_line("scale = Vector2(24, 16)");
		p_file->store_line("");
		p_file->store_line("[node name=\"CollisionShape2D\" type=\"CollisionShape2D\" parent=\".\"]");
		p_file->store_line("shape = SubResource(\"RectangleShape2D_1\")");
		p_file->store_line("");
		p_file->store_line("[node name=\"DetectionArea\" type=\"Area2D\" parent=\".\"]");
		p_file->store_line("");
		p_file->store_line("[node name=\"DetectionShape\" type=\"CollisionShape2D\" parent=\"DetectionArea\"]");
		p_file->store_line("shape = SubResource(\"CircleShape2D_1\")");
		p_file->store_line("");
		p_file->store_line("[node name=\"InteractionArea\" type=\"Area2D\" parent=\".\"]");
		p_file->store_line("");
		p_file->store_line("[node name=\"InteractionShape\" type=\"CollisionShape2D\" parent=\"InteractionArea\"]");
		p_file->store_line("shape = SubResource(\"CircleShape2D_2\")");
		p_file->store_line("");
		p_file->store_line("[node name=\"InteractionPrompt\" type=\"Label\" parent=\".\"]");
		p_file->store_line("offset_left = -25.0");
		p_file->store_line("offset_top = -40.0");
		p_file->store_line("offset_right = 25.0");
		p_file->store_line("offset_bottom = -20.0");
		p_file->store_line("text = \"Press E\"");
		p_file->store_line("horizontal_alignment = 1");
	}
}
