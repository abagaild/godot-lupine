#include "collectible_system_module.h"

void CollectibleSystemModule::generate_script(Ref<FileAccess> p_file) {
	p_file->store_line("# CollectibleBase.gd");
	p_file->store_line("# Generated by Lupine Engine - Collectible Base Class");
	p_file->store_line("# Base class for all collectible items");
	p_file->store_line("");
	p_file->store_line("extends Area2D");
	p_file->store_line("class_name CollectibleBase");
	p_file->store_line("");
	p_file->store_line("# Signals");
	p_file->store_line("signal collected(collector: Node, collectible: CollectibleBase)");
	p_file->store_line("");
	p_file->store_line("# Collectible properties");
	p_file->store_line("@export var collectible_type: String = \"generic\"");
	p_file->store_line("@export var value: int = 1");
	p_file->store_line("@export var auto_collect: bool = true");
	p_file->store_line("@export var collect_sound: AudioStream");
	p_file->store_line("@export var collect_effect_scene: PackedScene");
	p_file->store_line("");
	p_file->store_line("# Animation properties");
	p_file->store_line("@export var bob_height: float = 10.0");
	p_file->store_line("@export var bob_speed: float = 2.0");
	p_file->store_line("@export var rotate_speed: float = 90.0");
	p_file->store_line("");
	p_file->store_line("# Internal state");
	p_file->store_line("var is_collected: bool = false");
	p_file->store_line("var initial_position: Vector2");
	p_file->store_line("var time_alive: float = 0.0");
	p_file->store_line("");
	p_file->store_line("# Components");
	p_file->store_line("@onready var sprite: Sprite2D = $Sprite2D");
	p_file->store_line("@onready var collision: CollisionShape2D = $CollisionShape2D");
	p_file->store_line("@onready var audio_player: AudioStreamPlayer2D = $AudioStreamPlayer2D");
	p_file->store_line("");
	p_file->store_line("func _ready():");
	p_file->store_line("\tinitial_position = global_position");
	p_file->store_line("\t");
	p_file->store_line("\t# Connect collection signal");
	p_file->store_line("\tbody_entered.connect(_on_body_entered)");
	p_file->store_line("\t");
	p_file->store_line("\t# Setup audio");
	p_file->store_line("\tif collect_sound:");
	p_file->store_line("\t\taudio_player.stream = collect_sound");
	p_file->store_line("");
	p_file->store_line("func _process(delta):");
	p_file->store_line("\tif is_collected:");
	p_file->store_line("\t\treturn");
	p_file->store_line("\t");
	p_file->store_line("\ttime_alive += delta");
	p_file->store_line("\t");
	p_file->store_line("\t# Bobbing animation");
	p_file->store_line("\tif bob_height > 0:");
	p_file->store_line("\t\tvar bob_offset = sin(time_alive * bob_speed) * bob_height");
	p_file->store_line("\t\tglobal_position.y = initial_position.y + bob_offset");
	p_file->store_line("\t");
	p_file->store_line("\t# Rotation animation");
	p_file->store_line("\tif rotate_speed > 0 and sprite:");
	p_file->store_line("\t\tsprite.rotation_degrees += rotate_speed * delta");
	p_file->store_line("");
	p_file->store_line("func _on_body_entered(body: Node):");
	p_file->store_line("\tif is_collected:");
	p_file->store_line("\t\treturn");
	p_file->store_line("\t");
	p_file->store_line("\t# Check if it's the player");
	p_file->store_line("\tif body.name.contains(\"Player\") or body.has_method(\"collect_item\"):");
	p_file->store_line("\t\tif auto_collect:");
	p_file->store_line("\t\t\tcollect(body)");
	p_file->store_line("");
	p_file->store_line("func collect(collector: Node):");
	p_file->store_line("\tif is_collected:");
	p_file->store_line("\t\treturn");
	p_file->store_line("\t");
	p_file->store_line("\tis_collected = true");
	p_file->store_line("\t");
	p_file->store_line("\t# Apply collection effect");
	p_file->store_line("\t_apply_collection_effect(collector)");
	p_file->store_line("\t");
	p_file->store_line("\t# Play sound");
	p_file->store_line("\tif audio_player and collect_sound:");
	p_file->store_line("\t\taudio_player.play()");
	p_file->store_line("\t");
	p_file->store_line("\t# Spawn visual effect");
	p_file->store_line("\tif collect_effect_scene:");
	p_file->store_line("\t\tvar effect = collect_effect_scene.instantiate()");
	p_file->store_line("\t\tget_tree().current_scene.add_child(effect)");
	p_file->store_line("\t\teffect.global_position = global_position");
	p_file->store_line("\t");
	p_file->store_line("\t# Emit signal");
	p_file->store_line("\tcollected.emit(collector, self)");
	p_file->store_line("\t");
	p_file->store_line("\t# Collection animation");
	p_file->store_line("\t_play_collection_animation()");
	p_file->store_line("");
	p_file->store_line("func _apply_collection_effect(collector: Node):");
	p_file->store_line("\t# Override in derived classes");
	p_file->store_line("\tpass");
	p_file->store_line("");
	p_file->store_line("func _play_collection_animation():");
	p_file->store_line("\t# Disable collision");
	p_file->store_line("\tcollision.set_deferred(\"disabled\", true)");
	p_file->store_line("\t");
	p_file->store_line("\t# Scale and fade animation");
	p_file->store_line("\tvar tween = create_tween()");
	p_file->store_line("\ttween.parallel().tween_property(sprite, \"scale\", Vector2(1.5, 1.5), 0.2)");
	p_file->store_line("\ttween.parallel().tween_property(sprite, \"modulate:a\", 0.0, 0.2)");
	p_file->store_line("\ttween.tween_callback(queue_free)");
	p_file->store_line("");
	p_file->store_line("func set_value(new_value: int):");
	p_file->store_line("\tvalue = new_value");
	p_file->store_line("");
	p_file->store_line("func get_value() -> int:");
	p_file->store_line("\treturn value");
	p_file->store_line("");
	p_file->store_line("func set_collectible_type(new_type: String):");
	p_file->store_line("\tcollectible_type = new_type");
	p_file->store_line("");
	p_file->store_line("func get_collectible_type() -> String:");
	p_file->store_line("\treturn collectible_type");
}

void CollectibleSystemModule::generate_scene(Ref<FileAccess> p_file, const String &p_scene_name) {
	if (p_scene_name == "Coin") {
		// Generate coin collectible scene
		p_file->store_line("[gd_scene load_steps=3 format=3 uid=\"uid://coin_collectible\"]");
		p_file->store_line("");
		p_file->store_line("[ext_resource type=\"Script\" path=\"res://scripts/collectibles/Coin.gd\" id=\"1_coin_script\"]");
		p_file->store_line("");
		p_file->store_line("[sub_resource type=\"CircleShape2D\" id=\"CircleShape2D_1\"]");
		p_file->store_line("radius = 12.0");
		p_file->store_line("");
		p_file->store_line("[node name=\"Coin\" type=\"Area2D\"]");
		p_file->store_line("script = ExtResource(\"1_coin_script\")");
		p_file->store_line("collectible_type = \"coin\"");
		p_file->store_line("value = 10");
		p_file->store_line("");
		p_file->store_line("[node name=\"Sprite2D\" type=\"Sprite2D\" parent=\".\"]");
		p_file->store_line("modulate = Color(1, 1, 0, 1)");
		p_file->store_line("scale = Vector2(24, 24)");
		p_file->store_line("");
		p_file->store_line("[node name=\"CollisionShape2D\" type=\"CollisionShape2D\" parent=\".\"]");
		p_file->store_line("shape = SubResource(\"CircleShape2D_1\")");
		p_file->store_line("");
		p_file->store_line("[node name=\"AudioStreamPlayer2D\" type=\"AudioStreamPlayer2D\" parent=\".\"]");
	} else if (p_scene_name == "HealthPickup") {
		// Generate health pickup scene
		p_file->store_line("[gd_scene load_steps=3 format=3 uid=\"uid://health_pickup\"]");
		p_file->store_line("");
		p_file->store_line("[ext_resource type=\"Script\" path=\"res://scripts/collectibles/HealthPickup.gd\" id=\"1_health_pickup_script\"]");
		p_file->store_line("");
		p_file->store_line("[sub_resource type=\"RectangleShape2D\" id=\"RectangleShape2D_1\"]");
		p_file->store_line("size = Vector2(20, 20)");
		p_file->store_line("");
		p_file->store_line("[node name=\"HealthPickup\" type=\"Area2D\"]");
		p_file->store_line("script = ExtResource(\"1_health_pickup_script\")");
		p_file->store_line("collectible_type = \"health\"");
		p_file->store_line("value = 25");
		p_file->store_line("");
		p_file->store_line("[node name=\"Sprite2D\" type=\"Sprite2D\" parent=\".\"]");
		p_file->store_line("modulate = Color(1, 0.2, 0.2, 1)");
		p_file->store_line("scale = Vector2(20, 20)");
		p_file->store_line("");
		p_file->store_line("[node name=\"CollisionShape2D\" type=\"CollisionShape2D\" parent=\".\"]");
		p_file->store_line("shape = SubResource(\"RectangleShape2D_1\")");
		p_file->store_line("");
		p_file->store_line("[node name=\"AudioStreamPlayer2D\" type=\"AudioStreamPlayer2D\" parent=\".\"]");
	} else if (p_scene_name == "PowerUp") {
		// Generate power-up scene
		p_file->store_line("[gd_scene load_steps=3 format=3 uid=\"uid://power_up\"]");
		p_file->store_line("");
		p_file->store_line("[ext_resource type=\"Script\" path=\"res://scripts/collectibles/PowerUp.gd\" id=\"1_power_up_script\"]");
		p_file->store_line("");
		p_file->store_line("[sub_resource type=\"CircleShape2D\" id=\"CircleShape2D_1\"]");
		p_file->store_line("radius = 16.0");
		p_file->store_line("");
		p_file->store_line("[node name=\"PowerUp\" type=\"Area2D\"]");
		p_file->store_line("script = ExtResource(\"1_power_up_script\")");
		p_file->store_line("collectible_type = \"power_up\"");
		p_file->store_line("value = 1");
		p_file->store_line("");
		p_file->store_line("[node name=\"Sprite2D\" type=\"Sprite2D\" parent=\".\"]");
		p_file->store_line("modulate = Color(0.5, 0.5, 1, 1)");
		p_file->store_line("scale = Vector2(32, 32)");
		p_file->store_line("");
		p_file->store_line("[node name=\"CollisionShape2D\" type=\"CollisionShape2D\" parent=\".\"]");
		p_file->store_line("shape = SubResource(\"CircleShape2D_1\")");
		p_file->store_line("");
		p_file->store_line("[node name=\"AudioStreamPlayer2D\" type=\"AudioStreamPlayer2D\" parent=\".\"]");
		p_file->store_line("");
		p_file->store_line("[node name=\"Glow\" type=\"Sprite2D\" parent=\".\"]");
		p_file->store_line("modulate = Color(0.5, 0.5, 1, 0.3)");
		p_file->store_line("scale = Vector2(48, 48)");
	} else if (p_scene_name == "TreasureChest") {
		// Generate treasure chest scene
		p_file->store_line("[gd_scene load_steps=3 format=3 uid=\"uid://treasure_chest\"]");
		p_file->store_line("");
		p_file->store_line("[ext_resource type=\"Script\" path=\"res://scripts/collectibles/TreasureChest.gd\" id=\"1_treasure_chest_script\"]");
		p_file->store_line("");
		p_file->store_line("[sub_resource type=\"RectangleShape2D\" id=\"RectangleShape2D_1\"]");
		p_file->store_line("size = Vector2(40, 30)");
		p_file->store_line("");
		p_file->store_line("[node name=\"TreasureChest\" type=\"Area2D\"]");
		p_file->store_line("script = ExtResource(\"1_treasure_chest_script\")");
		p_file->store_line("collectible_type = \"chest\"");
		p_file->store_line("auto_collect = false");
		p_file->store_line("");
		p_file->store_line("[node name=\"Sprite2D\" type=\"Sprite2D\" parent=\".\"]");
		p_file->store_line("modulate = Color(0.8, 0.6, 0.2, 1)");
		p_file->store_line("scale = Vector2(40, 30)");
		p_file->store_line("");
		p_file->store_line("[node name=\"CollisionShape2D\" type=\"CollisionShape2D\" parent=\".\"]");
		p_file->store_line("shape = SubResource(\"RectangleShape2D_1\")");
		p_file->store_line("");
		p_file->store_line("[node name=\"AudioStreamPlayer2D\" type=\"AudioStreamPlayer2D\" parent=\".\"]");
		p_file->store_line("");
		p_file->store_line("[node name=\"InteractionPrompt\" type=\"Label\" parent=\".\"]");
		p_file->store_line("offset_left = -25.0");
		p_file->store_line("offset_top = -50.0");
		p_file->store_line("offset_right = 25.0");
		p_file->store_line("offset_bottom = -30.0");
		p_file->store_line("text = \"Press E\"");
		p_file->store_line("horizontal_alignment = 1");
		p_file->store_line("visible = false");
	}
}
