#include "popup_manager_module.h"

void PopupManagerModule::generate_script(Ref<FileAccess> p_file) {
	String filename = p_file->get_path().get_file();
	
	if (filename == "PopupManager.gd") {
		p_file->store_line("# PopupManager.gd");
		p_file->store_line("# Generated by Lupine Engine - Popup Manager");
		p_file->store_line("# System for displaying popup notifications");
		p_file->store_line("");
		p_file->store_line("extends Node");
		p_file->store_line("");
		p_file->store_line("# Popup queue and settings");
		p_file->store_line("var popup_queue: Array[Dictionary] = []");
		p_file->store_line("var active_popups: Array[Control] = []");
		p_file->store_line("var max_concurrent_popups: int = 3");
		p_file->store_line("var popup_spacing: float = 80.0");
		p_file->store_line("");
		p_file->store_line("# Popup scene");
		p_file->store_line("var popup_scene: PackedScene");
		p_file->store_line("");
		p_file->store_line("func _ready():");
		p_file->store_line("\tpopup_scene = preload(\"res://scenes/ui/PopupNotification.tscn\")");
		p_file->store_line("");
		p_file->store_line("func _process(delta):");
		p_file->store_line("\t_process_popup_queue()");
		p_file->store_line("\t_update_popup_positions()");
		p_file->store_line("");
		p_file->store_line("func show_notification(title: String, message: String, icon: Texture2D = null, duration: float = 3.0, color: Color = Color.WHITE):");
		p_file->store_line("\tvar popup_data = {");
		p_file->store_line("\t\t\"title\": title,");
		p_file->store_line("\t\t\"message\": message,");
		p_file->store_line("\t\t\"icon\": icon,");
		p_file->store_line("\t\t\"duration\": duration,");
		p_file->store_line("\t\t\"color\": color,");
		p_file->store_line("\t\t\"type\": \"notification\"");
		p_file->store_line("\t}");
		p_file->store_line("\tpopup_queue.append(popup_data)");
		p_file->store_line("");
		p_file->store_line("func show_level_up(new_level: int):");
		p_file->store_line("\tshow_notification(\"Level Up!\", \"You reached level \" + str(new_level), null, 4.0, Color.GOLD)");
		p_file->store_line("");
		p_file->store_line("func show_quest_notification(title: String, quest_name: String):");
		p_file->store_line("\tshow_notification(title, quest_name, null, 3.5, Color.CYAN)");
		p_file->store_line("");
		p_file->store_line("func show_status_effect(effect_name: String, effect_color: Color):");
		p_file->store_line("\tshow_notification(\"Status Effect\", effect_name, null, 2.0, effect_color)");
		p_file->store_line("");
		p_file->store_line("func show_item_pickup(item_name: String, quantity: int = 1):");
		p_file->store_line("\tvar message = item_name");
		p_file->store_line("\tif quantity > 1:");
		p_file->store_line("\t\tmessage += \" x\" + str(quantity)");
		p_file->store_line("\tshow_notification(\"Item Acquired\", message, null, 2.5, Color.GREEN)");
		p_file->store_line("");
		p_file->store_line("func show_achievement(achievement_name: String):");
		p_file->store_line("\tshow_notification(\"Achievement Unlocked!\", achievement_name, null, 5.0, Color.PURPLE)");
		p_file->store_line("");
		p_file->store_line("func _process_popup_queue():");
		p_file->store_line("\twhile popup_queue.size() > 0 and active_popups.size() < max_concurrent_popups:");
		p_file->store_line("\t\tvar popup_data = popup_queue.pop_front()");
		p_file->store_line("\t\t_create_popup(popup_data)");
		p_file->store_line("");
		p_file->store_line("func _create_popup(popup_data: Dictionary):");
		p_file->store_line("\tif not popup_scene:");
		p_file->store_line("\t\treturn");
		p_file->store_line("\t");
		p_file->store_line("\tvar popup = popup_scene.instantiate()");
		p_file->store_line("\tget_tree().current_scene.add_child(popup)");
		p_file->store_line("\t");
		p_file->store_line("\t# Configure popup");
		p_file->store_line("\tif popup.has_method(\"setup\"):");
		p_file->store_line("\t\tpopup.setup(popup_data)");
		p_file->store_line("\t");
		p_file->store_line("\t# Connect cleanup signal");
		p_file->store_line("\tif popup.has_signal(\"popup_finished\"):");
		p_file->store_line("\t\tpopup.popup_finished.connect(_on_popup_finished.bind(popup))");
		p_file->store_line("\t");
		p_file->store_line("\tactive_popups.append(popup)");
		p_file->store_line("\t_update_popup_positions()");
		p_file->store_line("");
		p_file->store_line("func _on_popup_finished(popup: Control):");
		p_file->store_line("\tactive_popups.erase(popup)");
		p_file->store_line("\tpopup.queue_free()");
		p_file->store_line("\t_update_popup_positions()");
		p_file->store_line("");
		p_file->store_line("func _update_popup_positions():");
		p_file->store_line("\tfor i in range(active_popups.size()):");
		p_file->store_line("\t\tvar popup = active_popups[i]");
		p_file->store_line("\t\tvar target_y = 20.0 + (i * popup_spacing)");
		p_file->store_line("\t\t");
		p_file->store_line("\t\t# Animate to new position");
		p_file->store_line("\t\tvar tween = popup.create_tween()");
		p_file->store_line("\t\ttween.tween_property(popup, \"position:y\", target_y, 0.3)");
		p_file->store_line("");
		p_file->store_line("func clear_all_popups():");
		p_file->store_line("\tfor popup in active_popups:");
		p_file->store_line("\t\tpopup.queue_free()");
		p_file->store_line("\tactive_popups.clear()");
		p_file->store_line("\tpopup_queue.clear()");
	} else if (filename == "PopupNotification.gd") {
		p_file->store_line("# PopupNotification.gd");
		p_file->store_line("# Generated by Lupine Engine - Popup Notification");
		p_file->store_line("# Individual popup notification widget");
		p_file->store_line("");
		p_file->store_line("extends Control");
		p_file->store_line("");
		p_file->store_line("# Signals");
		p_file->store_line("signal popup_finished()");
		p_file->store_line("");
		p_file->store_line("# Components");
		p_file->store_line("@onready var background: NinePatchRect = $Background");
		p_file->store_line("@onready var icon: TextureRect = $HBox/Icon");
		p_file->store_line("@onready var title_label: Label = $HBox/VBox/Title");
		p_file->store_line("@onready var message_label: Label = $HBox/VBox/Message");
		p_file->store_line("");
		p_file->store_line("# Animation properties");
		p_file->store_line("var slide_in_duration: float = 0.3");
		p_file->store_line("var display_duration: float = 3.0");
		p_file->store_line("var slide_out_duration: float = 0.3");
		p_file->store_line("");
		p_file->store_line("func _ready():");
		p_file->store_line("\t# Start off-screen");
		p_file->store_line("\tposition.x = get_viewport().get_visible_rect().size.x");
		p_file->store_line("");
		p_file->store_line("func setup(popup_data: Dictionary):");
		p_file->store_line("\t# Set content");
		p_file->store_line("\ttitle_label.text = popup_data.get(\"title\", \"\")");
		p_file->store_line("\tmessage_label.text = popup_data.get(\"message\", \"\")");
		p_file->store_line("\t");
		p_file->store_line("\t# Set icon");
		p_file->store_line("\tif popup_data.has(\"icon\") and popup_data.icon:");
		p_file->store_line("\t\ticon.texture = popup_data.icon");
		p_file->store_line("\t\ticon.visible = true");
		p_file->store_line("\telse:");
		p_file->store_line("\t\ticon.visible = false");
		p_file->store_line("\t");
		p_file->store_line("\t# Set color");
		p_file->store_line("\tvar color = popup_data.get(\"color\", Color.WHITE)");
		p_file->store_line("\ttitle_label.modulate = color");
		p_file->store_line("\t");
		p_file->store_line("\t# Set duration");
		p_file->store_line("\tdisplay_duration = popup_data.get(\"duration\", 3.0)");
		p_file->store_line("\t");
		p_file->store_line("\t# Start animation sequence");
		p_file->store_line("\t_animate_in()");
		p_file->store_line("");
		p_file->store_line("func _animate_in():");
		p_file->store_line("\t# Slide in from right");
		p_file->store_line("\tvar target_x = get_viewport().get_visible_rect().size.x - size.x - 20");
		p_file->store_line("\t");
		p_file->store_line("\tvar tween = create_tween()");
		p_file->store_line("\ttween.tween_property(self, \"position:x\", target_x, slide_in_duration)");
		p_file->store_line("\ttween.tween_delay(display_duration)");
		p_file->store_line("\ttween.tween_callback(_animate_out)");
		p_file->store_line("");
		p_file->store_line("func _animate_out():");
		p_file->store_line("\t# Slide out to right");
		p_file->store_line("\tvar target_x = get_viewport().get_visible_rect().size.x");
		p_file->store_line("\t");
		p_file->store_line("\tvar tween = create_tween()");
		p_file->store_line("\ttween.tween_property(self, \"position:x\", target_x, slide_out_duration)");
		p_file->store_line("\ttween.tween_callback(func(): popup_finished.emit())");
		p_file->store_line("");
		p_file->store_line("func _input(event):");
		p_file->store_line("\t# Allow clicking to dismiss");
		p_file->store_line("\tif event is InputEventMouseButton and event.pressed:");
		p_file->store_line("\t\tif get_rect().has_point(to_local(event.global_position)):");
		p_file->store_line("\t\t\t_animate_out()");
	}
}

void PopupManagerModule::generate_scene(Ref<FileAccess> p_file, const String &p_scene_name) {
	if (p_scene_name == "PopupNotification") {
		p_file->store_line("[gd_scene load_steps=2 format=3 uid=\"uid://popup_notification\"]");
		p_file->store_line("");
		p_file->store_line("[ext_resource type=\"Script\" path=\"res://scripts/ui/PopupNotification.gd\" id=\"1_popup_script\"]");
		p_file->store_line("");
		p_file->store_line("[node name=\"PopupNotification\" type=\"Control\"]");
		p_file->store_line("custom_minimum_size = Vector2(250, 80)");
		p_file->store_line("layout_mode = 3");
		p_file->store_line("anchors_preset = 0");
		p_file->store_line("script = ExtResource(\"1_popup_script\")");
		p_file->store_line("");
		p_file->store_line("[node name=\"Background\" type=\"NinePatchRect\" parent=\".\"]");
		p_file->store_line("layout_mode = 1");
		p_file->store_line("anchors_preset = 15");
		p_file->store_line("anchor_right = 1.0");
		p_file->store_line("anchor_bottom = 1.0");
		p_file->store_line("");
		p_file->store_line("[node name=\"HBox\" type=\"HBoxContainer\" parent=\".\"]");
		p_file->store_line("layout_mode = 1");
		p_file->store_line("anchors_preset = 15");
		p_file->store_line("anchor_right = 1.0");
		p_file->store_line("anchor_bottom = 1.0");
		p_file->store_line("offset_left = 10.0");
		p_file->store_line("offset_top = 10.0");
		p_file->store_line("offset_right = -10.0");
		p_file->store_line("offset_bottom = -10.0");
		p_file->store_line("");
		p_file->store_line("[node name=\"Icon\" type=\"TextureRect\" parent=\"HBox\"]");
		p_file->store_line("layout_mode = 2");
		p_file->store_line("custom_minimum_size = Vector2(32, 32)");
		p_file->store_line("expand_mode = 1");
		p_file->store_line("");
		p_file->store_line("[node name=\"VBox\" type=\"VBoxContainer\" parent=\"HBox\"]");
		p_file->store_line("layout_mode = 2");
		p_file->store_line("size_flags_horizontal = 3");
		p_file->store_line("");
		p_file->store_line("[node name=\"Title\" type=\"Label\" parent=\"HBox/VBox\"]");
		p_file->store_line("layout_mode = 2");
		p_file->store_line("text = \"Notification\"");
		p_file->store_line("");
		p_file->store_line("[node name=\"Message\" type=\"Label\" parent=\"HBox/VBox\"]");
		p_file->store_line("layout_mode = 2");
		p_file->store_line("text = \"Message text\"");
		p_file->store_line("autowrap_mode = 2");
	}
}
